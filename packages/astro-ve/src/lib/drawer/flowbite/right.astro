---
export interface Props {
	id?: string;
	img?: string;
	dyn?: boolean;
	description?: string;
}

// Slots

//  after-description
//  after-footer
//  after-footer-button

const { img, id, dyn = false, description } = Astro.props;

//  Imports
import { style, dynStyle } from '../../style';

let styleSheet = dyn ? dynStyle : style;

let idText: string = 'PlaceHolder';
let descriptionText: string = '';

// Dynamic CSS Placeholders
let baseBackgroundStyle: string =
	styleSheet.getVariable('bg-kbve-menu-bg').variable;
let baseTextStyle: string = styleSheet.getVariable(
	'text-kbve-text-primary'
).variable;
let baseSecondaryTextStyle: string = styleSheet.getVariable(
	'text-kbve-text-secondary'
).variable;
let baseSVGColorStyle: string = styleSheet.getVariable(
	'text-kbve-svg-primary'
).variable;

// Check if `id` is not provided or is an empty string
if (!id) {
	console.warn(
		'Warning: The "id" prop is missing or empty when calling the Astro Flowbite Right Component.'
	);
} else {
	idText = id.replace(/-/g, ' ').replace(/drawer\s?/gi, '');
}

// Check if `description` is not provided or is an empty sring

if (description) {
	descriptionText = description;
}
---

<Fragment>
	<div
		id={id}
		class={`fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full ${baseBackgroundStyle} w-80`}
		tabindex="-1"
		aria-labelledby={`${id}-label`}>
		<h5
			id={`${id}-label`}
			class={`inline-flex items-center mb-4 text-base font-semibold uppercase ${baseTextStyle}`}>
			<svg
				class={`w-4 h-4 me-2.5 ${baseSVGColorStyle}`}
				aria-hidden="true"
				xmlns="http://www.w3.org/2000/svg"
				fill="currentColor"
				viewBox="0 0 20 20">
				<path
					d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z">
				</path>
			</svg>
			{idText}
		</h5>
		<button
			type="button"
			data-drawer-hide={id}
			aria-controls={id}
			class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 end-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white">
			<svg
				class="w-3 h-3"
				aria-hidden="true"
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 14 14">
				<path
					stroke="currentColor"
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6">
				</path>
			</svg>
			<span class="sr-only">Close menu</span>
		</button>
		<p class={`mb-6 text-sm ${baseSecondaryTextStyle}`}>
			{descriptionText}
			<slot name="after-description" />
		</p>

		<div {...Astro.props}>
			<slot />
		</div>

		<slot name="after-footer" />

		<div class="grid grid-cols-2 gap-4">
			<slot name="after-footer-button" />
		</div>
	</div>
</Fragment>
